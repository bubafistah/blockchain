stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    OSX_SDK: 10:11
  parallel:
    matrix:
      - TARGET: x86_64-unknown-linux-gnu
      - TARGET: i686-pc-linux-gnu
      - TARGET: arm-linux-gnueabihf
      - TARGET: aarch64-linux-gnu
      - TARGET: x86_64-w64-mingw32
      - TARGET: i686-w64-mingw32
      - TARGET: riscv64-linux-gnu
      - TARGET: x86_64-unknown-freebsd
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  before_script:
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -o artifacts --build-arg BUILD=$TARGET  .
  artifacts:
    name: $TARGET
    paths:
      - artifacts/



deploy:
  stage: deploy
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  parallel:
    matrix:
      - TARGET: x86_64-unknown-linux-gnu
      - TARGET: x86_64-unknown-freebsd
      - TARGET: i686-pc-linux-gnu
      - TARGET: x86_64-w64-mingw32
      - TARGET: i686-w64-mingw32
      - TARGET: arm-linux-gnueabihf
      - TARGET: aarch64-linux-gnu
      - TARGET: riscv64-linux-gnu
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:next-$TARGET
    - docker tag $CI_REGISTRY_IMAGE:next-$TARGET $DOCKER_REGISTRY/lthn/chain:next-$TARGET
    - docker push $DOCKER_REGISTRY/lthn/chain:next-$TARGET
  environment:
    name: $IMG_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'


